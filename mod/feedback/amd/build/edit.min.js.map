{"version":3,"file":"edit.min.js","sources":["../src/edit.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Edit items in feedback module\n *\n * @module     mod_feedback/edit\n * @copyright  2016 Marina Glancy\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n\"use strict\";\n\nimport $ from 'jquery';\nimport {addIconToContainerRemoveOnCompletion} from 'core/loadingicon';\nimport Notification from 'core/notification';\nimport Pending from 'core/pending';\nimport {prefetchStrings} from 'core/prefetch';\nimport SortableList from 'core/sortable_list';\nimport {getString, getStrings} from 'core/str';\nimport {add as addToast} from 'core/toast';\nimport {reorderQuestions} from './local/repository';\n\nconst Selectors = {\n    deleteQuestionButton: '[data-action=\"delete\"]',\n    sortableListRegion: '[data-region=\"questions-sortable-list\"]',\n    sortableElement: '[data-region=\"questions-sortable-list\"] .feedback_itemlist[id]',\n};\n\n/**\n * Returns the Feedback question item id from the DOM id of an item.\n *\n * @param {String} id The dom id, f.g.: feedback_item_22\n * @return int\n */\nconst getItemId = (id) => {\n    return Number(id.replace(/^.*feedback_item_/i, ''));\n};\n\n/**\n * Returns the order of the items in the sortable list.\n *\n * @param {Element} element The element to get the order from.\n * @return string\n */\nconst getItemOrder = (element) => {\n    const sortableList = element.closest(Selectors.sortableListRegion);\n    let itemOrder = [];\n    sortableList.querySelectorAll(Selectors.sortableElement).forEach((item) => {\n        itemOrder.push(getItemId(item.id));\n    });\n    return itemOrder.toString();\n};\n\nlet initialized = false;\nlet moduleId = null;\n\n/**\n * Initialise editor and all it's modules\n *\n * @param {Integer} cmId\n */\nexport const init = (cmId) => {\n\n    moduleId = cmId;\n\n    // Ensure we only add our listeners once (can be called multiple times).\n    if (initialized) {\n        return;\n    }\n\n    prefetchStrings('core', [\n        'yes',\n        'no',\n    ]);\n    prefetchStrings('admin', [\n        'confirmation',\n    ]);\n    prefetchStrings('mod_feedback', [\n        'confirmdeleteitem',\n        'questionmoved',\n    ]);\n\n    // Add event listeners.\n    document.addEventListener('click', event => {\n\n        // Delete question.\n        const deleteButton = event.target.closest(Selectors.deleteQuestionButton);\n        if (deleteButton) {\n            event.preventDefault();\n            const targetUrl = deleteButton.getAttribute('href');\n\n            const requiredStrings = [\n                {key: 'confirmation', component: 'admin'},\n                {key: 'confirmdeleteitem', component: 'mod_feedback'},\n                {key: 'yes', component: 'core'},\n                {key: 'no', component: 'core'},\n            ];\n\n            getStrings(requiredStrings).then(([confirmation, confirmdeleteitem, yes, no]) => {\n                return Notification.confirm(confirmation, confirmdeleteitem, yes, no, () => {\n                    window.location = targetUrl;\n                });\n            }).catch(Notification.exception);\n        }\n    });\n\n    // Initialize sortable list to handle active conditions moving (note JQuery dependency, see MDL-72293 for resolution).\n    new SortableList(document.querySelector(Selectors.sortableListRegion));\n    $(document).on(SortableList.EVENTS.DROP, Selectors.sortableElement, (event, info) => {\n        if (info.positionChanged) {\n            const pendingPromise = new Pending('mod_feedback/questions:reorder');\n            const itemOrder = getItemOrder(info.element[0]);\n\n            reorderQuestions(moduleId, itemOrder)\n                .then(addIconToContainerRemoveOnCompletion(info.element[0], pendingPromise))\n                .then(() => getString('questionmoved', 'mod_feedback'))\n                .then(addToast)\n                .then(() => pendingPromise.resolve())\n                .catch(Notification.exception);\n        }\n    });\n\n    initialized = true;\n};\n"],"names":["Selectors","getItemOrder","element","sortableList","closest","itemOrder","querySelectorAll","forEach","item","id","push","Number","replace","toString","initialized","moduleId","cmId","document","addEventListener","event","deleteButton","target","preventDefault","targetUrl","getAttribute","requiredStrings","key","component","then","_ref","confirmation","confirmdeleteitem","yes","no","Notification","confirm","window","location","catch","exception","SortableList","querySelector","on","EVENTS","DROP","info","positionChanged","pendingPromise","Pending","addToast","resolve"],"mappings":"0oBAmCMA,+BACoB,yBADpBA,6BAEkB,0CAFlBA,0BAGe,iEAmBfC,aAAgBC,gBACZC,aAAeD,QAAQE,QAAQJ,kCACjCK,UAAY,UAChBF,aAAaG,iBAAiBN,2BAA2BO,SAASC,OAbnDC,IAAAA,GAcXJ,UAAUK,MAdCD,GAccD,KAAKC,GAb3BE,OAAOF,GAAGG,QAAQ,qBAAsB,UAexCP,UAAUQ,gBAGjBC,aAAc,EACdC,SAAW,mBAOMC,OAEjBD,SAAWC,KAGPF,4CAIY,OAAQ,CACpB,MACA,qCAEY,QAAS,CACrB,+CAEY,eAAgB,CAC5B,oBACA,kBAIJG,SAASC,iBAAiB,SAASC,cAGzBC,aAAeD,MAAME,OAAOjB,QAAQJ,mCACtCoB,aAAc,CACdD,MAAMG,uBACAC,UAAYH,aAAaI,aAAa,QAEtCC,gBAAkB,CACpB,CAACC,IAAK,eAAgBC,UAAW,SACjC,CAACD,IAAK,oBAAqBC,UAAW,gBACtC,CAACD,IAAK,MAAOC,UAAW,QACxB,CAACD,IAAK,KAAMC,UAAW,6BAGhBF,iBAAiBG,MAAKC,WAAEC,aAAcC,kBAAmBC,IAAKC,gBAC9DC,sBAAaC,QAAQL,aAAcC,kBAAmBC,IAAKC,IAAI,KAClEG,OAAOC,SAAWd,gBAEvBe,MAAMJ,sBAAaK,mBAK1BC,uBAAavB,SAASwB,cAAczC,mDACtCiB,UAAUyB,GAAGF,uBAAaG,OAAOC,KAAM5C,2BAA2B,CAACmB,MAAO0B,WACpEA,KAAKC,gBAAiB,OAChBC,eAAiB,IAAIC,iBAAQ,kCAC7B3C,UAAYJ,aAAa4C,KAAK3C,QAAQ,qCAE3Ba,SAAUV,WACtBuB,MAAK,qDAAqCiB,KAAK3C,QAAQ,GAAI6C,iBAC3DnB,MAAK,KAAM,kBAAU,gBAAiB,kBACtCA,KAAKqB,YACLrB,MAAK,IAAMmB,eAAeG,YAC1BZ,MAAMJ,sBAAaK,eAIhCzB,aAAc"}