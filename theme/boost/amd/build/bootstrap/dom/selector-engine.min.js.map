{"version":3,"file":"selector-engine.min.js","sources":["../../../src/bootstrap/dom/selector-engine.js"],"sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.2.3): dom/selector-engine.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport { isDisabled, isVisible } from '../util/index'\n\n/**\n * Constants\n */\n\nconst SelectorEngine = {\n  find(selector, element = document.documentElement) {\n    return [].concat(...Element.prototype.querySelectorAll.call(element, selector))\n  },\n\n  findOne(selector, element = document.documentElement) {\n    return Element.prototype.querySelector.call(element, selector)\n  },\n\n  children(element, selector) {\n    return [].concat(...element.children).filter(child => child.matches(selector))\n  },\n\n  parents(element, selector) {\n    const parents = []\n    let ancestor = element.parentNode.closest(selector)\n\n    while (ancestor) {\n      parents.push(ancestor)\n      ancestor = ancestor.parentNode.closest(selector)\n    }\n\n    return parents\n  },\n\n  prev(element, selector) {\n    let previous = element.previousElementSibling\n\n    while (previous) {\n      if (previous.matches(selector)) {\n        return [previous]\n      }\n\n      previous = previous.previousElementSibling\n    }\n\n    return []\n  },\n  // TODO: this is now unused; remove later along with prev()\n  next(element, selector) {\n    let next = element.nextElementSibling\n\n    while (next) {\n      if (next.matches(selector)) {\n        return [next]\n      }\n\n      next = next.nextElementSibling\n    }\n\n    return []\n  },\n\n  focusableChildren(element) {\n    const focusables = [\n      'a',\n      'button',\n      'input',\n      'textarea',\n      'select',\n      'details',\n      '[tabindex]',\n      '[contenteditable=\"true\"]'\n    ].map(selector => `${selector}:not([tabindex^=\"-\"])`).join(',')\n\n    return this.find(focusables, element).filter(el => !isDisabled(el) && isVisible(el))\n  }\n}\n\nexport default SelectorEngine\n"],"names":["SelectorEngine","find","selector","element","document","documentElement","concat","Element","prototype","querySelectorAll","call","findOne","querySelector","children","filter","child","matches","parents","ancestor","parentNode","closest","push","prev","previous","previousElementSibling","next","nextElementSibling","focusableChildren","focusables","map","join","this","el"],"mappings":"gMAaMA,eAAiB,CACrBC,KAAKC,cAAUC,+DAAUC,SAASC,sBACzB,GAAGC,UAAUC,QAAQC,UAAUC,iBAAiBC,KAAKP,QAASD,YAGvES,QAAQT,cAAUC,+DAAUC,SAASC,uBAC5BE,QAAQC,UAAUI,cAAcF,KAAKP,QAASD,WAGvDW,SAAQ,CAACV,QAASD,WACT,GAAGI,UAAUH,QAAQU,UAAUC,QAAOC,OAASA,MAAMC,QAAQd,YAGtEe,QAAQd,QAASD,gBACTe,QAAU,OACZC,SAAWf,QAAQgB,WAAWC,QAAQlB,eAEnCgB,UACLD,QAAQI,KAAKH,UACbA,SAAWA,SAASC,WAAWC,QAAQlB,iBAGlCe,SAGTK,KAAKnB,QAASD,cACRqB,SAAWpB,QAAQqB,4BAEhBD,UAAU,IACXA,SAASP,QAAQd,gBACZ,CAACqB,UAGVA,SAAWA,SAASC,6BAGf,IAGTC,KAAKtB,QAASD,cACRuB,KAAOtB,QAAQuB,wBAEZD,MAAM,IACPA,KAAKT,QAAQd,gBACR,CAACuB,MAGVA,KAAOA,KAAKC,yBAGP,IAGTC,kBAAkBxB,eACVyB,WAAa,CACjB,IACA,SACA,QACA,WACA,SACA,UACA,aACA,4BACAC,KAAI3B,oBAAeA,oCAAiC4B,KAAK,YAEpDC,KAAK9B,KAAK2B,WAAYzB,SAASW,QAAOkB,MAAO,qBAAWA,MAAO,oBAAUA,qBAIrEhC"}